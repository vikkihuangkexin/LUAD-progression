m$cluster <- as.factor(m$number)
library(sciClone)
v = read.table("E:\\LUAD_model\\subClone\\data\\vcf.txt",header=T)
c = read.table("E:\\LUAD_model\\subClone\\data\\copyNumber.txt",header=T)
sample = read.table("E:\\LUAD_model\\subClone\\data\\sample_del.txt",header=F)
outPath <- "E:\\LUAD_model\\subClone1"
out_clusters <- paste("clusters", ".txt", sep='')
out_pdf <- paste("result", ".pdf", sep='')
out_summary <- paste("summary", ".txt", sep='')
for(i in 1:501){
sample_i = sample[i,]
vaf <- v[v$Sample == sample_i,c(2,3,4,5,6)]
cn <- c[c$sample == sample_i,c(2,3,4,5)]
sc = sciClone(vafs=list(vaf),
sampleNames= sample_i,
copyNumberCalls=list(cn),
cnCallsAreLog2=TRUE,
annotation = list(v[v$Sample == sample_i,c(2,3,7)]),
useSexChrs = TRUE,
doClustering = TRUE,
clusterMethod = 'bmm',
copyNumberMargins = 0.25,
minimumDepth = 30)
out_fileName1 <- paste(i,out_clusters,sep='_')
out_fileName2 <- paste(i,out_pdf,sep='_')
out_fileName3 <- paste(i,out_summary,sep='_')
out_filePath1 <- paste(outPath,out_fileName1,sep='\\')
out_filePath2 <- paste(outPath,out_fileName2,sep='\\')
out_filePath3 <- paste(outPath,out_fileName3,sep='\\')
writeClusterTable(sc,out_filePath1)
sc.plot1d(sc,out_filePath2)
writeClusterSummaryTable(sc,out_filePath3)
}
read_clusters <- paste("clusters", ".txt", sep='')
read_fileName <- matrix(0,501,1)
outPath <- "E:\\LUAD_model\\subClone1"
for (i in 1:501) {
fileNames <- paste(i,read_clusters,sep='_')
read_fileName[i,] <- paste(outPath,fileNames,sep='\\')
}
data <- lapply(read_fileName, function(x){
read.table(x, header=T)
})
count <- matrix(0,501,1)
for(i in 1:501){
gene1 <- subset(data[i][[1]],select = c("cluster"))
count[i,1] <- length(unique(gene1[,1]))-1
}
count[count==0] <- 1
write.csv(count,"E:\\LUAD_model\\subClone1\\result\\subclone_number.csv")
m <-read.csv("E:\\LUAD_model\\subClone1\\result\\subclone_number.csv",
head=T,sep=',')
m$cluster <- as.factor(m$number)
m <- m[-151,]
m <- m[-239,]
m <- m[-488,]
g <- ggplot2::ggplot(m,ggplot2::aes(x=order,y=cluster,fill=cluster))
g <- g + ggplot2::geom_boxplot()
g <- g + ggplot2::labs(x = 'pseudotime order',y='subclone number',fill='Subclone\n Number')
g
library(Hmisc)
library(ggpubr)
library(ggbeeswarm)
m <-read.csv("E:\\LUAD_model\\subClone\\result\\subclone_number.csv",
head=T,sep=',')
m$cluster <- as.factor(m$number)
m <- m[-151,]
m <- m[-239,]
g <- ggplot2::ggplot(m,ggplot2::aes(x=cluster,y=order,fill=cluster))
#g <- ggplot2::ggplot(m,ggplot2::aes(x=cluster,y=order,fill=cluster))
g <- g + ggplot2::geom_boxplot()
g <- g + ggplot2::labs(x = 'Pseudotime order',y='Subclone number',fill='Subclone\n Number')+theme_bw()
g <- g + theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank())+stat_compare_means(method = "anova")
g
n <- matrix(0,9,2)
for (i in 1:9) {
n[i,1] <- i
n[i,2] <- length(which(m[,2]==i))
}
colnames(n) <- c("number","snumber")
n <- as.data.frame(n)
n$number <- as.factor(n$number)
ggplot(data=n,mapping=aes(x=number,y=snumber,fill=number,group=factor(1)))+
geom_bar(stat="identity",width=0.5)+
labs(x = 'Subclone number',y='Sample number',fill='Subclone\n Number') + theme_bw()
g <- ggplot2::ggplot(m,ggplot2::aes(x=order,y=cluster,fill=cluster))
#g <- ggplot2::ggplot(m,ggplot2::aes(x=cluster,y=order,fill=cluster))
g <- g + ggplot2::geom_boxplot()
g <- g + ggplot2::labs(x = 'Pseudotime order',y='Subclone number',fill='Subclone\n Number')+theme_bw()
g <- g + theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank())
g
count <- read.csv("E:\\LUAD_model\\subClone\\result\\subclone_number.csv")
p1<-ggplot(data=mtcars, aes(x=disp, y=mpg)) +
geom_point(color="#d7191c") +geom_smooth(method="lm",color="#1a9641") +geom_text(aes(x=400, y=32,label=paste("R","=",signif(r,3),seq="")),color="#fdae61") +
theme_bwr1<-cor(mtcars$disp,mtcars$hp,method="pearson")p2<-ggplot(data=mtcars, aes(x=disp, y=hp)) +geom_point(color="#d7191c") +geom_smooth(method="lm",color="#1a9641") +
geom_text(aes(x=400, y=32,label=paste("R","=",signif(r1,3),seq="")),color="#fdae61") +theme_bwcowplot::plot_grid(p1,p2,nrow=1,labels=c("p1","p2"),hjust=0.05)
p1<-ggplot(data=count, aes(x=disp, y=mpg)) +geom_point(color="#d7191c") +geom_smooth(method="lm",color="#1a9641") +geom_text(aes(x=400, y=32,label=paste("R","=",signif(r,3),seq="")),color="#fdae61")
########################## enrichR ########################################
symbol <- read.csv("E:\\LUAD_model\\symbol_ID2.csv",head=F,sep=',')
count <- read.csv("E:\\LUAD_model\\subClone\\result\\subclone_number.csv")
p1<-ggplot(data=count, aes(x=disp, y=mpg)) +geom_point(color="#d7191c") +geom_smooth(method="lm",color="#1a9641") +geom_text(aes(x=400, y=32,label=paste("R","=",signif(r,3),seq="")),color="#fdae61")
########################## enrichR富集分析########################################
library(enrichR)
symbol <- read.csv("E:\\LUAD_model\\symbol_ID2.csv",head=F,sep=',')
data <- read.csv("E:\\LUAD_model\\gene_id\\gene_expression.csv",head=F,sep=',')
symbol_ID1 <- read.csv("E:\\LUAD_model\\gene_id\\symbol_ID.csv",head=F,sep=',')
sample_order <- read.csv("E:\\LUAD_model\\GRN\\sample_order.csv",head=F,sep=',')
sample_order <- as.matrix(sample_order)
data353 <- data[match('BUB1B',symbol_ID1[,1]),] #BUB1B  FAM13A
data353 <- na.omit(data353)
data353 <- data353[,-c(6,24,87,143,170,183,212,262,413,485,516,529)]
data353 <- data353[,sample_order]
y <- as.matrix(data353[1,])
x <- read.csv("E:\\LUAD_model\\fscore_521.csv",head=F,sep=',')
x <- (x-x[1,])/(x[521,]-x[1,])
x <- as.matrix(x)
my.data <- data.frame(x,y)
b <- ggplot(my.data, aes(x = x, y = y)) + xlab("Pseudotime value") + ylab("Expression value")+theme_bw()
b <- b+ geom_point()  + geom_smooth(method = "lm",formula=y~I(x*x), color = "blue", fill = "yellow",size = 1)+stat_cor(method = "pearson")
b <- b + theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank())
b
############################# BUB1B表达随伪时间值变化 #########################
library(Hmisc)
library(ggpubr)
library(ggbeeswarm)
b <- ggplot(my.data, aes(x = x, y = y)) + xlab("Pseudotime value") + ylab("Expression value")+theme_bw()
b <- b+ geom_point()  + geom_smooth(method = "lm",formula=y~I(x*x), color = "blue", fill = "yellow",size = 1)+stat_cor(method = "pearson")
b <- b + theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank())
b
